"use strict";angular.module("karaokeApp",["ngCookies","ngResource","ngSanitize","ngRoute","firebase","angularfire.firebase","angularfire.login","simpleLoginTools"]).config(["$routeProvider",function(a){a.when("/",{authRequired:!1,templateUrl:"views/main.html",controller:"MainCtrl"}).when("/suggest",{authRequired:!0,templateUrl:"views/suggest.html",controller:"SuggestCtrl"}).when("/vote",{authRequired:!0,templateUrl:"views/vote.html",controller:"VoteCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("karaokeApp").controller("MainCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("karaokeApp").constant("angularFireVersion","0.6").constant("loginRedirectPath","/login").constant("loginProviders","github").constant("FBURL","https://hrkaraoke.firebaseio.com"),angular.module("angularfire.firebase",["firebase"]).factory("firebaseRef",["Firebase","FBURL",function(a,b){function c(a){for(var b=0;b<a.length;b++)"object"==typeof a[b]&&(a[b]=c(a[b]));return a.join("/")}return function(){return new a(c([b].concat(Array.prototype.slice.call(arguments))))}}]).service("syncData",["$firebase","firebaseRef",function(a,b){return function(c,d){var e=b(c);return d&&(e=e.limit(d)),a(e)}}]),angular.module("angularfire.login",["firebase","angularfire.firebase"]).run(["simpleLogin",function(a){a.init()}]).factory("simpleLogin",["$rootScope","$firebaseSimpleLogin","firebaseRef","profileCreator","$timeout",function(a,b,c,d){function e(){if(null===f)throw new Error("Must call loginService.init() before using its methods")}var f=null;return{init:function(){return f=b(c())},logout:function(){e(),f.$logout()},loginGithub:function(a){e(),f.$login("github",{rememberMe:!0,scope:"user"}).then(function(b){console.log("the user looks like this first: ",b),c("users/"+b.username).set({username:b.displayName,avatar:b.avatar_url,songcount:0},function(){console.log(a),a&&a(b)})},a)},createAccount:function(a,b){e(),f.$createUser(a).then(function(a){b(null,a)},b)},createProfile:d}}]).factory("profileCreator",["firebaseRef","$timeout",function(a,b){return function(c,d){a("users/"+c.username).set({username:c.displayName,avatar:avatar_url},function(a){d&&b(function(){d(a)})})}}]),angular.module("simpleLoginTools",[]).service("waitForAuth",["$rootScope","$q","$timeout",function(a,b,c){function d(b){a.auth&&(a.auth.error=b instanceof Error?b.toString():null);for(var d=0;d<f.length;d++)f[d]();c(function(){e.resolve()})}var e=b.defer(),f=[];return f.push(a.$on("$firebaseSimpleLogin:login",d)),f.push(a.$on("$firebaseSimpleLogin:logout",d)),f.push(a.$on("$firebaseSimpleLogin:error",d)),e.promise}]).config(["$provide",function(a){a.decorator("ngCloakDirective",function(a,b){var c=a[0],d=c.compile;return c.compile=function(a,e){b.then(function(){d.call(c,a,e)})},a})}]).directive("ngShowAuth",["$rootScope",function(a){function b(a,b){var c=a.$eval(b);return"string"==typeof c||angular.isArray(c)||(c=b),"string"==typeof c&&(c=c.split(",")),c}function c(a,b){var c=!1;return angular.forEach(b,function(b){return b===a?(c=!0,!0):!1}),c}function d(a){if(!a.length)throw new Error("ng-show-auth directive must be login, logout, or error (you may use a comma-separated list)");return angular.forEach(a,function(a){if(!c(a,["login","logout","error"]))throw new Error('Invalid state "'+a+'" for ng-show-auth directive, must be one of login, logout, or error')}),!0}var e="logout";return a.$on("$firebaseSimpleLogin:login",function(){e="login"}),a.$on("$firebaseSimpleLogin:logout",function(){e="logout"}),a.$on("$firebaseSimpleLogin:error",function(){e="error"}),{restrict:"A",link:function(f,g,h){function i(){var a=c(e,j);setTimeout(function(){g.toggleClass("ng-cloak",!a)},0)}var j=b(f,h.ngShowAuth);d(j),i(),a.$on("$firebaseSimpleLogin:login",i),a.$on("$firebaseSimpleLogin:logout",i),a.$on("$firebaseSimpleLogin:error",i)}}}]),function(a){function b(a,b,c,d){this._route=c,this._location=a,this._rootScope=b,this._loginPath=d,this._redirectTo=null,this._authenticated=!(!b.auth||!b.auth.user),this._init()}a.module("karaokeApp").run(["$injector","$location","$rootScope","loginRedirectPath",function(a,c,d,e){a.has("$route")&&new b(c,d,a.get("$route"),e)}]),b.prototype={_init:function(){var b=this;this._checkCurrent(),b._rootScope.$on("$routeChangeStart",function(a,c){b._authRequiredRedirect(c,b._loginPath)}),b._rootScope.$on("$firebaseSimpleLogin:login",a.bind(this,this._login)),b._rootScope.$on("$firebaseSimpleLogin:logout",a.bind(this,this._logout)),b._rootScope.$on("$firebaseSimpleLogin:error",a.bind(this,this._logout))},_checkCurrent:function(){this._route.current&&this._authRequiredRedirect(this._route.current,this._loginPath)},_login:function(){this._authenticated=!0,this._redirectTo?(this._redirect(this._redirectTo),this._redirectTo=null):this._location.path()===this._loginPath&&(this._location.replace(),this._location.path("/"))},_logout:function(){this._authenticated=!1,this._checkCurrent()},_redirect:function(a){this._location.replace(),this._location.path(a)},_authRequiredRedirect:function(a,b){a.authRequired&&!this._authenticated?(this._redirectTo=void 0===a.pathTo?this._location.path():a.pathTo===b?"/":a.pathTo,this._redirect(b)):this._authenticated&&this._location.path()===this._loginPath&&this._redirect("/")}}}(angular),angular.module("karaokeApp").controller("LoginController",["$rootScope","$scope","simpleLogin","$location",function(a,b,c,d){b.err=null,b.user=null,b.confirm=null,b.createMode=!1,b.loginGithub=function(){console.log("Github Login"),c.loginGithub(function(b){a.user=b})},b.loginPassword=function(a){b.err=null,b.email?b.pass?c.loginPassword(b.email,b.pass,function(c,d){b.err=c?c+"":null,!c&&a&&a(d)}):b.err="Please enter a password":b.err="Please enter an email address"},b.logout=c.logout,b.createAccount=function(){function a(){return b.email?b.pass?b.pass!==b.confirm&&(b.err="Passwords do not match"):b.err="Please enter a password":b.err="Please enter an email address",!b.err}b.err=null,a()&&c.createAccount(b.email,b.pass,function(a,e){a?b.err=a?a+"":null:b.login(function(){c.createProfile(e.uid,e.email),d.path("/account")})})}}]),angular.module("karaokeApp").controller("VoteCtrl",["$scope","$firebase",function(a,b){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.buttons={all:"active",mine:""},a.filterexpr="",a.getMine=function(){a.buttons={all:"",mine:"active"}},a.getAll=function(){a.buttons={all:"active",mine:""}};var c=new Firebase("https://hrkaraoke.firebaseio.com/songs");a.songs=b(c),console.log(a.songs),a.addSong=function(){a.songs.$add({artist:"BNL",title:"One Week",singer:"Nicholas",votes:0})}}]),angular.module("karaokeApp").controller("SuggestCtrl",["$rootScope","$scope","$firebase","simpleLogin",function(a,b,c,d){b.me={},b.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],console.log("Rootscope: ",a.user),a.user||d.loginGithub(function(c){a.user=c,b.user=a.user,b.newSong={owner:b.user.username}}),b.submitSong=function(a){if(console.log("fuck this"),!b.user)return void console.log("NO USER");console.log(b.user.username);var d=new Firebase("https://hrkaraoke.firebaseio.com/songs"),e=c(d);a.owner=b.user.username,e.$add(a)}}]);